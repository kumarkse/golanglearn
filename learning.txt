go mod init _name_

methods from packages are capitalized

you can just write the code , go automatically imports and remove packages that is in need

go run file.go 
go build file.go

Go is a tool for managing Go source code.

Usage:

        go <command> [arguments]  for documentation

case sensitive

var varname type = _ _
varname := _ _  (this declaration not aloowed when declaring outside a function)

var smallval uint8 -> 0 to 255 only allowed

uint8: 8-bit unsigned integers (0 to 255)
uint16: 16-bit unsigned integers (0 to 65535)
uint32: 32-bit unsigned integers (0 to 4294967295)
uint64: 64-bit unsigned integers (0 to 18446744073709551615)
int8: 8-bit signed integers (−128 to 127)
int16: 16-bit signed integers (−32768 to 32767)
int32: 32-bit signed integers (−2147483648 to 2147483647)
int64: 64-bit signed integers (−9223372036854775808 to 9223372036854775807)

float32: IEEE-754 32-bit floating-point numbers  i.e 6 decimal points
float64: IEEE-754 64-bit floating-point numbers  i.e 14 points

complex64: Complex numbers with float32 real and imaginary parts
complex128: Complex numbers with float64 real and imaginary parts

byte: Alias for uint8
rune: Alias for int32

default value is zero 0

variable name with initial capital is public by nature

while taking input we have:
varname , _  := reader.Read(type).......
here  , _ is the err 


you need to trim space before converting the inputted value so as to remove the \n present in end

GOOS="windows" go build   ->  build exe file for windows

garbage collection in runtime package in doc

NO classes so no inheritence,super,parent,child...
so we have struct

